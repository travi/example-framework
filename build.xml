<?xml version="1.0" encoding="UTF-8"?>
<project default="gates" name="example-framework">
    <property name="basedir" value="${project.basedir}"/>
    <property name="shared.dir" value="${basedir}/vendor/travi/framework"/>
    <property file="${shared.dir}/build/shared.properties"/>
    <property file="build.properties"/>

    <target name="gates">
        <phingcall target="checkstyle"/>
        <phingcall target="messDetect"/>
    </target>

    <fileset dir="app" id="all-src-files">
        <include name="**/*.php"/>
    </fileset>

    <target name="checkstyle">
        <mkdir dir="${build.logs}"/>
        <phpcodesniffer standard="vendor/travi/framework/build/codingStandard.xml" haltonerror="true" haltonwarning="false">
            <formatter type="full" usefile="false"/>
            <formatter type="checkstyle" outfile="${build.logs}/checkstyle.xml"/>
            <fileset refid="all-src-files" />
        </phpcodesniffer>
    </target>

    <target name="messDetect">
        <mkdir dir="${build.logs}"/>
        <phpcpd>
            <fileset refid="all-src-files" />
            <formatter type="pmd" outfile="${build.logs}/pmd-cpd.xml"/>
        </phpcpd>
        <phpmd>
            <fileset refid="all-src-files" />
            <formatter type="text" useFile="false" outfile="${build.logs}/pmd.txt"/>
            <formatter type="xml" useFile="true" outfile="${build.logs}/pmd.xml"/>
        </phpmd>
    </target>

    <target name="toLocal">
        <property name="database.url" value="${local.database.url}"/>
        <property name="database.username" value="${local.database.username}"/>
        <property name="database.password" value="${local.database.password}"/>
    </target>

    <target name="toProduction">
        <property name="server.host" value="${prod.server.host}"/>
        <property name="database.url" value="${prod.database.url}"/>
        <property name="database.username" value="${prod.database.username}"/>
        <property name="database.password" value="${prod.database.password}"/>
    </target>

    <target name="createDeployDirs">
        <mkdir dir="build"/>
        <mkdir dir="dist"/>
    </target>

    <target name="prepareDistribution" depends="createDeployDirs">
        <copy todir="build" preservelastmodified="true">
            <fileset dir=".">
                <include name="app/**"/>
                <include name="vendor/**"/>
                <include name="doc_root/**"/>
                <include name="config/**"/>
            </fileset>
        </copy>
    </target>

    <target name="package" depends="prepareDistribution">
        <tar destfile="${deploy.archive}"
             basedir="build"
             compression="bzip2"
             longfile="gnu"/>
    </target>

    <target name="updateDatabase">
        <liquibase-update
            changelogFile="config/db/changeLogs/example.xml"
            jar="${ant.lib}${liquibase.jar}"
            classpathref="${ant.lib}${mysqlDriver.jar}"
            url="jdbc:mysql://${database.url}:3306/example_framework"
            username="${database.username}"
            password="${database.password}"
            passthru="false"
            checkreturn="true"
        />
    </target>

    <target name="deploy" depends="prepareDistribution">
        <filesync
            sourceDir="build/"
            destinationDir="${server.username}@${server.host}:${deploy.path.site}"
            backupDir="${server.username}@${server.host}:${deploy.path.root}/example-framework.bak"
            delete="true"
        />
        <phingcall target="updateDatabase"/>
    </target>
</project>